<html>
<head>

<script type="text/javascript" src="/js/raphael-min.js"></script>
<script type="text/javascript" src="/js/dracula_graffle.js"></script>
<script type="text/javascript" src="/js/jquery-1.4.2.min.js"></script>
<script type="text/javascript" src="/js/dracula_graph.js"></script>
</head>
<script>
	var redraw, g, renderer;
	var max_x=0;
	var max_y=0;
	window.onload = function() {
		g = new Graph();
		var rect_height = 20;
		var rect_width = 100;
		var off_width = 150;
		var off_height = 30;
		
		var getAttr = function(r, x, y, width, height, main){
			var rect = r.set();
			var main_width = width * 5 + 6;
			var main_height = (height + 2) + 2;
			
			var main_rect = r.rect(x+2, y+2, width*5, height).attr({ "fill":"EFF", r:"1px", "stroke-width":"1px"})
			var main_text = r.text(x+4, y+2 + height/2, main.cName + "." + main.mName).attr({"font-size": 10, 'text-anchor': 'start'})
			main_text.attr("cursor", "pointer");
			main_text.mousedown(function(){
				var form = $('form[name=main]');
				var input = $("input[name=id]", form);
				input.val(main.name);
				form.submit();
			});
			rect.push(main_rect);
			rect.push(main_text);
			return rect;
		}

		var render = function(r, n) {
			n.point[0] = parseInt(n.x * off_width - off_width / 2);
			n.point[1] = parseInt(n.y * off_height - off_height / 2);
			var set = r.set();
			var rect  = r.rect(n.point[0], n.point[1], rect_width, rect_height).attr({ "fill":n.c, r:"5px", "stroke-width":"1px"});
			var text = r.text(n.point[0] + 2, n.point[1] + rect_height / 2, (n.full || n.id)).attr({"font-size": 10, 'text-anchor': 'start'});
			
			set.push(rect);
			set.push(text);
			var sub = null;

			set.hover(function(){
				if(sub == null){
					sub = getAttr(r, n.point[0], n.point[1], rect_width, rect_height, n.main, n.attrs);
					set.sub = sub;
					sub.hover(function(){
						sub.show();
					});
					sub.mouseout(function(){
						sub.hide();
					});
				}
				sub.toFront();
				sub.show();
			});
			set.mouseout(function(){
				sub.hide();
			});
			
			if(max_x < n.x || max_y < n.y){
				max_x = max_x > n.x ? max_x : n.x;
				max_y = max_y > n.y ? max_y : n.y;
				$('svg').width(max_x*off_width + off_width*2);
				$('svg').height(max_y*off_height + off_height*100);
			}
			return set;
		};
		#foreach($invokeVo in $invokeVos)
			g.addNode('$invokeVo.name', {
				x:$invokeVo.x, 
				y:$invokeVo.y, 
				c:'#ffb',
				full:'$invokeVo.mName', 
				render: render,
				main:{
					"name":"$invokeVo.name",
					"mName":"$invokeVo.mName",
					"cName":"$invokeVo.cName"
				},
			})
		#end
		#foreach($relate in $relateVos)
			g.addEdge('$relate.from', '$relate.to', {stroke : '$relate.color', fill : '$relate.color|2', dash:'',directed : true, label:'$relate.label'})
		#end

		var layouter = new Graph.Layout.Spring(g);
		renderer = new Graph.Renderer.Raphael('canvas', g, $(document).width(), $(document).height());
		redraw = function() {
			layouter.layout();
			renderer.draw();
		};

		hide = function(id) {
			g.nodes[id].hide();
		};
		show = function(id) {
			g.nodes[id].show();
		};
	};

</script>

<body>
	<form name="main" method="post" enctype="multipart/form-data">
		<br>
		选择xml文件
		<input id="file" name="file" type="file" multiple="multiple"> 
		<input type="submit" value="上传">
		<input type="button" value="清空" class="clear-form">
		<input type="hidden" value="$!id" name="id">
		<br>
		#if($size > 0)
			总共有$size 个
	    #end
		<hr>
	    <div id="svg" style="width:100%;height:100%;overflow:scroll;"><div id="canvas"></div></div>
	</form>

<script type="text/javascript">
	$(function(){
		$('.clear-form').click(function(){
			$.post("/invoke/clear", function(json){
				var data = $.parseJSON(json);
				if(data.status == 1){
					location.href="/invoke/index";
				}else{
					alert("删除失败")
				}
			});
		});
	});
</script>
</body>
</html>
